name: Build for Multiple Architectures

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-native:
    strategy:
      matrix:
        include:
          - arch: x86_64
            python_arch: x64
          - arch: i686
            python_arch: x86
    runs-on: ubuntu-latest
    name: Build for ${{ matrix.arch }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Python ${{ matrix.python_arch }}
      uses: actions/setup-python@v6
      with:
        python-version: '3.13'
        architecture: ${{ matrix.python_arch }}

    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang mold gcc-multilib g++-multilib

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pillow nuitka

    - name: Compile module with Nuitka
      run: |
        LDFLAGS="-fuse-ld=mold" python -m nuitka \
          --module \
          --clang \
          --lto=yes \
          main.py
    
    - name: Rename artifact
      run: mv main.so main-${{ matrix.arch }}.so

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: compiled-module-${{ matrix.arch }}
        path: main-${{ matrix.arch }}.so

  build-qemu:
    strategy:
      matrix:
        include:
          - arch: aarch64
            image: arm64v8/ubuntu:22.04
          - arch: armv7
            image: arm32v7/ubuntu:22.04
    runs-on: ubuntu-latest
    name: Build for ${{ matrix.arch }} (QEMU)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Compile module in Docker container
        run: |
          docker run --rm -v "${{ github.workspace }}":/ws -w /ws ${{ matrix.image }} bash -c '
            export DEBIAN_FRONTEND=noninteractive
            echo "--- Installing dependencies ---"
            apt-get update
            apt-get install -y software-properties-common
            add-apt-repository ppa:deadsnakes/ppa
            apt-get update
            apt-get install -y python3.13-full clang mold build-essential
            
            echo "--- Installing Python packages ---"
            python3.13 -m pip install --upgrade pip
            python3.13 -m pip install nuitka pillow

            echo "--- Compiling with Nuitka ---"
            LDFLAGS="-fuse-ld=mold" python3.13 -m nuitka \
              --module \
              --clang \
              --lto=yes \
              main.py
            
            echo "--- Build complete ---"
          '
      # FIX: Rename the output file to make it unique for this architecture
      - name: Rename artifact
        run: mv main.so main-${{ matrix.arch }}.so

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: compiled-module-${{ matrix.arch }}
          # FIX: Point to the specific, renamed file path
          path: main-${{ matrix.arch }}.so
