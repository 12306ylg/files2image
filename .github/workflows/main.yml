name: Python Build (x86_64 on Plucky with Latest Clang)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build for x86_64
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Prepare System Environment (Global Plucky Upgrade)
      run: |
        echo "### 1. Correctly applying global 'noble' -> 'plucky' replacement..."
        # Target the main file AND all files in the sources.list.d directory
        sudo sed -i 's/noble/plucky/g' /etc/apt/sources.list
        sudo sed -i 's/noble/plucky/g' /etc/apt/sources.list.d/*.sources
        sudo sed -i 's/noble/plucky/g' /etc/apt/sources.list.d/*.list

        echo "### 2. Applying specific fix for Microsoft repository..."
        MS_REPO_FILE="/etc/apt/sources.list.d/microsoft-prod.list"
        if [ -f "$MS_REPO_FILE" ]; then
          sudo sed -i 's/ubuntu\/24.04\/prod/ubuntu\/25.04\/prod/g' "$MS_REPO_FILE"
        fi

        echo "### 3. Adding the LLVM APT repository using the modern GPG key method..."
        sudo apt-get update && sudo apt-get install -y gnupg wget # Ensure dependencies are present
        sudo mkdir -p /etc/apt/keyrings
        wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/llvm-snapshot.gpg
        echo "deb [signed-by=/etc/apt/keyrings/llvm-snapshot.gpg] http://apt.llvm.org/plucky/ llvm-toolchain-plucky main" | sudo tee /etc/apt/sources.list.d/llvm.list

        echo "### 4. Updating package lists for the new 'plucky' environment..."
        sudo apt-get update
        
        echo "### 5. Performing full system upgrade to 'plucky'..."
        sudo DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confold" full-upgrade -y
        
        echo "### 6. Installing latest clang and mold..."
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y clang mold
        clang --version

    - name: Setup Python 3.13 for x64
      uses: actions/setup-python@v6
      with:
        python-version: '3.13'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pillow nuitka

    - name: Compile module with Nuitka
      run: |
        LDFLAGS="-fuse-ld=mold" python -m nuitka \
          --module \
          --clang \
          --lto=yes \
          main.py
    
    - name: Rename artifact for upload
      run: mv main.*.so main-x86_64.so

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: compiled-module-x86_64
        path: main-x86_64.so
