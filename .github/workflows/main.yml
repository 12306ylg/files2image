name: Python Build (x86_64 on Plucky with Latest Clang)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build for x86_64
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Prepare System Environment (Global Plucky Upgrade)
      run: |
        echo "### 1. Globally replacing 'noble' with 'plucky' in core OS sources..."
        sudo sed -i 's/noble/plucky/g' /etc/apt/sources.list

        echo "### 2. Handling known third-party repositories..."
        # Iterate through files in sources.list.d to apply specific fixes
        for f in /etc/apt/sources.list.d/*.list; do
          if [ -f "$f" ]; then
            echo "Processing $f..."
            # For Microsoft repositories, update both version and codename
            if grep -q "packages.microsoft.com" "$f"; then
              echo "-> Found Microsoft repo. Updating to 25.04/plucky."
              sudo sed -i 's/ubuntu\/24.04\/prod/ubuntu\/25.04\/prod/g' "$f"
              sudo sed -i 's/noble/plucky/g' "$f"
            else
              # For any other repo, apply the general noble -> plucky rule
              echo "-> Applying general noble->plucky replacement."
              sudo sed -i 's/noble/plucky/g' "$f"
            fi
          fi
        done

        echo "### 3. Adding the required LLVM APT repository for 'plucky'..."
        wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | sudo tee /etc/apt/trusted.gpg.d/llvm-snapshot.gpg > /dev/null
        sudo apt-add-repository "deb http://apt.llvm.org/plucky/ llvm-toolchain-plucky main"

        echo "### 4. Updating package lists for the new 'plucky' environment..."
        sudo apt-get update
        
        echo "### 5. Performing full system upgrade to 'plucky'..."
        sudo DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confold" full-upgrade -y
        
        echo "### 6. Installing latest clang and mold..."
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y clang mold
        
        echo "### Setup complete. Verifying Clang version:"
        clang --version

    - name: Setup Python 3.13 for x64
      uses: actions/setup-python@v6
      with:
        python-version: '3.13'
        architecture: 'x64'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pillow nuitka

    - name: Compile module with Nuitka
      run: |
        LDFLAGS="-fuse-ld=mold" python -m nuitka \
          --module \
          --clang \
          --lto=yes \
          main.py
    
    - name: Rename artifact for upload
      run: mv main.*.so main-x86_64.so

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: compiled-module-x86_64
        path: main-x86_64.so
